// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Contexts;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240529142505_Migration12")]
    partial class Migration12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Talisay City",
                            FullName = "Pia Admin"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "Cebu City",
                            FullName = "User Admin"
                        });
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("OrdersId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Project.Models.Orders", b =>
                {
                    b.Property<int>("OrdersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdersId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 100,
                            Description = "Served with soya onion gravy, apple, and mustard leaf, this dish highlights Cebu’s reputation for pork dishes.",
                            Name = "Roasted Suckling Pork",
                            Price = 850.0,
                            RestaurantId = 1,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 101,
                            Description = "A Filipino ceviche with shrimp, calamansi, pickled papaya, chili, and coconut, offering a fresh and tangy flavor profile.",
                            Name = "Truffle Mac & Cheese",
                            Price = 650.0,
                            RestaurantId = 1,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 102,
                            Description = "This seafood dish is served in a bacon beer sauce, combining local seafood with rich, savory flavors.",
                            Name = "Local Red Mullet and Clams",
                            Price = 950.0,
                            RestaurantId = 1,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 103,
                            Description = "A modern twist featuring jalapeno ice, adding a spicy and cool element to the fresh sashimi.",
                            Name = "Tuna Sashimi",
                            Price = 1200.0,
                            RestaurantId = 1,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 104,
                            Description = "A A hearty and flavorful chicken dish, perfect for those looking for a substantial meal​",
                            Name = "Chicken Tomahawk",
                            Price = 450.0,
                            RestaurantId = 1,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 200,
                            Description = "This signature dish features tender, flavorful baby back ribs smothered in a tangy barbecue sauce.",
                            Name = "Brian’s Ribs",
                            Price = 380.0,
                            RestaurantId = 2,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 201,
                            Description = "A juicy steak served with mashed potatoes and vegetables, perfect for meat lovers.",
                            Name = "David Dean’s Tenderloin",
                            Price = 880.0,
                            RestaurantId = 2,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 202,
                            Description = "A gigantic burger loaded with beef patties, cheese, bacon, and various toppings, ideal for sharing.",
                            Name = "Mighty Ton Burger",
                            Price = 520.0,
                            RestaurantId = 2,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 203,
                            Description = "A creamy and savory pasta dish with grilled chicken and mushrooms.",
                            Name = "Tricia’s Pasta",
                            Price = 690.0,
                            RestaurantId = 2,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 204,
                            Description = "A rich and decadent chocolate lava cake served with ice cream",
                            Name = "Lauren’s Lava Cake",
                            Price = 250.0,
                            RestaurantId = 2,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 300,
                            Description = "The house specialty, featuring crispy skin and tender, flavorful meat, is a must-try.",
                            Name = "Lechon de Cebu",
                            Price = 550.0,
                            RestaurantId = 3,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 301,
                            Description = "A stew made from leftover lechon, cooked with vinegar, liver sauce, and spices.",
                            Name = "Lechon Paksiw",
                            Price = 450.0,
                            RestaurantId = 3,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 302,
                            Description = " A sizzling platter of chopped lechon mixed with onions, chili, and spices.",
                            Name = "Sizzling Lechon Sisig",
                            Price = 980.0,
                            RestaurantId = 3,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 303,
                            Description = "A traditional Filipino sour soup with lechon, vegetables, and tamarind broth.",
                            Name = "Lechon Sinigang",
                            Price = 750.0,
                            RestaurantId = 3,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 304,
                            Description = "Fried lechon served with a variety of dipping sauces for an extra crispy experience​.  ",
                            Name = "Pritchon",
                            Price = 280.0,
                            RestaurantId = 3,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 400,
                            Description = "This dish features locally sourced organic chicken roasted to perfection with herbs and spices.",
                            Name = "Organic Roast Chicken",
                            Price = 890.0,
                            RestaurantId = 4,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 401,
                            Description = "Fresh tuna seared and served with a tangy wasabi dressing and vegetables.",
                            Name = "Seared Tuna",
                            Price = 750.0,
                            RestaurantId = 4,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 402,
                            Description = "A Filipino-Spanish fusion dish with slow-cooked lamb shank in a rich tomato-based stew.",
                            Name = "Lamb Shank Caldereta",
                            Price = 950.0,
                            RestaurantId = 4,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 403,
                            Description = "A creamy risotto with pumpkin, goat cheese, and a hint of truffle oil.",
                            Name = "Pumpkin and Goat Cheese Risotto",
                            Price = 700.0,
                            RestaurantId = 4,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 404,
                            Description = "A traditional Filipino dessert made with layers of graham crackers, cream, and fresh mangoes​",
                            Name = "Mango Float",
                            Price = 280.0,
                            RestaurantId = 4,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 500,
                            Description = "A hearty breakfast platter featuring eggs, bacon, sausage, toast, and a side of greens.",
                            Name = "Brian’s Ribs",
                            Price = 450.0,
                            RestaurantId = 5,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 501,
                            Description = "Creamy avocado spread on toasted artisanal bread, topped with cherry tomatoes, feta cheese, and a sprinkle of chili flakes. ",
                            Name = "David Dean’s Tenderloin",
                            Price = 350.0,
                            RestaurantId = 5,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 502,
                            Description = "Poached eggs and smoked salmon on a toasted English muffin, drizzled with hollandaise sauce and served with a side salad",
                            Name = "Mighty Ton Burger",
                            Price = 480.0,
                            RestaurantId = 5,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 503,
                            Description = "Fluffy pancakes served with maple syrup and butter, perfect for a sweet breakfast treat.",
                            Name = "Tricia’s Pasta",
                            Price = 320.0,
                            RestaurantId = 5,
                            Stock = 999
                        },
                        new
                        {
                            ProductId = 504,
                            Description = "A flavorful dish of spicy chorizo sausage, potatoes, and bell peppers, topped with a fried egg.",
                            Name = "Lauren’s Lava Cake",
                            Price = 420.0,
                            RestaurantId = 5,
                            Stock = 999
                        });
                });

            modelBuilder.Entity("Project.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Project.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locaton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurant");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Description = "The Pig & Palm offers a contemporary dining experience with a focus on European and gastropub cuisine. Founded by Michelin-starred British chef Jason Atherton and his Cebuana wife Irha, the restaurant features a modern, stylish interior with a relaxed atmosphere. The menu emphasizes locally sourced ingredients and innovative dishes, making it a popular spot for both brunch and dinner. Signature dishes include their creative takes on classic pub fare and a variety of cocktails crafted to perfection.",
                            Locaton = "Cebu Business Park",
                            Name = "The Pig & Palm"
                        },
                        new
                        {
                            RestaurantId = 2,
                            Description = "This family-owned restaurant offers a mix of Spanish and American dishes in a cozy, homey setting. The most popular dish is their Baby Back Ribs, which are renowned for their generous portions and delicious flavor​",
                            Locaton = "Ayala Cebu",
                            Name = "Casa Verde"
                        },
                        new
                        {
                            RestaurantId = 3,
                            Description = "House of Lechon specializes in the iconic Cebuano lechon, a traditional roasted pig known for its crispy skin and savory meat. The restaurant brings the renowned flavor of Carcar's lechon to the city, offering a taste of this beloved regional delicacy without the need for a long drive. The dining experience is enhanced by a casual, family-friendly atmosphere, perfect for enjoying authentic Filipino cuisine.",
                            Locaton = "Robinsons Galleria Cebu",
                            Name = "House of Lechon"
                        },
                        new
                        {
                            RestaurantId = 4,
                            Description = "Located in a beautifully restored colonial home, Circa 1900 combines historical charm with modern culinary excellence. The restaurant's ambiance is both vintage and sophisticated, providing a unique setting for dining. The menu features international dishes with a focus on local ingredients, skillfully prepared by their talented chefs. This makes Circa 1900 an ideal venue for intimate dinners and special occasions.",
                            Locaton = "Sanjercas Ville Ext. Rd, Cebu City​",
                            Name = "Circa 1900"
                        },
                        new
                        {
                            RestaurantId = 5,
                            Description = "Abaca Baking Company is renowned for its artisanal bread, pastries, and hearty breakfast dishes. It's a cozy spot perfect for brunch with a menu that showcases fresh, locally sourced ingredients.",
                            Locaton = "Ayala Cebu",
                            Name = "Abaca Baking Company"
                        });
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.HasOne("Project.Models.Orders", null)
                        .WithMany("OrdersList")
                        .HasForeignKey("OrdersId");
                });

            modelBuilder.Entity("Project.Models.Orders", b =>
                {
                    b.Navigation("OrdersList");
                });
#pragma warning restore 612, 618
        }
    }
}
